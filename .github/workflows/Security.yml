name: Enhanced Security Checks

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  security-events: write
  contents: write  
  actions: read     

jobs:
  code-ql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript 

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        id: codeql-analysis

  security-scan:
    needs: code-ql-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Semgrep Code Scan
        uses: semgrep/semgrep-action@v1
        id: semgrep-scan
        with:
          config: >- 
            p/security-audit 
            p/xss 
            p/javascript 
            p/react
        continue-on-error: true

      - name: OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        id: dependency-check
        with:
          project: 'GreenTech'
          path: '.'
          format: 'HTML'
          out: 'reports' 
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        id: trivy-scan
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true

      - name: Generate Security Report
        run: |
          echo "## Security Scan Report 🛡️" > security-report.md
          echo "Last Updated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> security-report.md
          echo "" >> security-report.md
          
          # Semgrep Results
          echo "### Semgrep Findings" >> security-report.md
          if [ "${{ steps.semgrep-scan.outcome }}" == "success" ]; then
            echo "✅ Semgrep Scan Passed" >> security-report.md
          else
            echo "❌ Semgrep Scan Failed" >> security-report.md
          fi
          echo "\`\`\`" >> security-report.md
          if [ -f "semgrep.json" ]; then
            jq -r '.results[] | "- " + .extra.message' semgrep.json >> security-report.md || echo "No detailed Semgrep findings" >> security-report.md
          else
            echo "No Semgrep results found" >> security-report.md
          fi
          echo "\`\`\`" >> security-report.md
          echo "" >> security-report.md
          
          # Dependency Check Results
          echo "### OWASP Dependency Check" >> security-report.md
          if [ "${{ steps.dependency-check.outcome }}" == "success" ]; then
            echo "✅ Dependency Scan Passed" >> security-report.md
          else
            echo "❌ Dependency Scan Failed" >> security-report.md
          fi
          echo "\`\`\`" >> security-report.md
          if [ -f "reports/dependency-check-report.html" ]; then
            grep -A 5 "Found [0-9]* vulnerabilities" reports/dependency-check-report.html | sed 's/<[^>]*>//g' >> security-report.md
          else
            echo "No dependencies scanned" >> security-report.md
          fi
          echo "\`\`\`" >> security-report.md
          echo "" >> security-report.md
          
          # Trivy Scan Results
          echo "### Trivy Vulnerability Scan" >> security-report.md
          if [ "${{ steps.trivy-scan.outcome }}" == "success" ]; then
            echo "✅ Trivy Scan Passed" >> security-report.md
          else
            echo "❌ Trivy Scan Failed" >> security-report.md
          fi
          echo "\`\`\`" >> security-report.md
          if [ -f "trivy-results.sarif" ]; then
            jq -r '.runs[].results[] | "- " + .message.text' trivy-results.sarif >> security-report.md || echo "No vulnerabilities found" >> security-report.md
          else
            echo "No vulnerabilities found" >> security-report.md
          fi
          echo "\`\`\`" >> security-report.md
          
          # CodeQL Results
          echo "### CodeQL Analysis" >> security-report.md
          if [ "${{ needs.code-ql-analysis.result }}" == "success" ]; then
            echo "✅ CodeQL Analysis Passed" >> security-report.md
          else
            echo "❌ CodeQL Analysis Failed" >> security-report.md
          fi

      - name: Update README
        run: |
          if [ -f "README.md" ]; then
            # Remove existing security report section if it exists
            sed -i '/## Security Scan Report/,$d' README.md
            # Append new security report
            cat security-report.md >> README.md
          else
            cp security-report.md README.md
          fi

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update security scan report" || echo "No changes to commit"
          git push

  npm-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.x'

      - name: Install dependencies
        working-directory: client
        run: npm install

      - name: Run npm audit
        working-directory: client
        run: |
          npm audit --audit-level=high || echo "Ignoring npm audit failure"
          npm audit signatures
