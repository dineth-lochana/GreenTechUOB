name: CI and Deploy 

on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    strategy:
      matrix:
        node-version: [23.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Enables npm caching

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Clean install dependencies
        run: |
          npm ci
        working-directory: client

      - name: Optimize Vite Config
        run: |
          cat <<EOT > client/vite.config.js
          import { defineConfig } from 'vite';
          import compression from 'vite-plugin-compression';

          export default defineConfig({
            plugins: [compression({ algorithm: 'brotliCompress' })],
            build: {
              chunkSizeWarningLimit: 500,
              rollupOptions: {
                output: {
                  manualChunks(id) {
                    if (id.includes('node_modules')) {
                      if (id.includes('firebase')) return 'firebase';
                      if (id.includes('lodash')) return 'lodash';
                      return 'vendor';
                    }
                  }
                },
                external: ['firebase', 'lodash']
              }
            }
          });
          EOT
        working-directory: client

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Install and build client
        working-directory: client
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_GEMINI_API_KEY: ${{ secrets.VITE_GEMINI_API_KEY }}
          VITE_Chatling_API_KEY: ${{ secrets.VITE_Chatling_API_KEY }}
        run: |
          npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'client/dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
